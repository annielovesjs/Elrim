{"ast":null,"code":"var _jsxFileName = \"/Users/annieliang/Documents/streams/client/src/components/SearchBar/SearchBar.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\nimport styles from './styles.module.css';\n\nclass SearchBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchTerm: '',\n      searchResults: null\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      action: \"/streams/search/\".concat(this.state.searchTerm),\n      className: styles.search,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.iconInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: styles.prompt,\n      type: \"text\",\n      placeholder: \"Search streams...\",\n      onChange: e => this.setState({\n        searchTerm: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: searchIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: state.streams\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(SearchBar);","map":{"version":3,"sources":["/Users/annieliang/Documents/streams/client/src/components/SearchBar/SearchBar.js"],"names":["React","connect","fetchStreams","styles","SearchBar","Component","state","searchTerm","searchResults","render","search","iconInput","prompt","e","setState","target","value","searchIcon","mapStateToProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,aAAa,EAAE;AAFX,KAD4B;AAAA;;AAMpCC,EAAAA,MAAM,GAAG;AACL,WACI;AAAM,MAAA,MAAM,4BAAqB,KAAKH,KAAL,CAAWC,UAAhC,CAAZ;AAA0D,MAAA,SAAS,EAAEJ,MAAM,CAACO,MAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEP,MAAM,CAACQ,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAER,MAAM,CAACS,MAAzB;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,mBAFhB;AAGI,MAAA,QAAQ,EAAGC,CAAD,IAAO,KAAKC,QAAL,CAAc;AAACP,QAAAA,UAAU,EAAEM,CAAC,CAACE,MAAF,CAASC;AAAtB,OAAd,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI;AAAG,MAAA,SAAS,EAAEC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ,EASI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CADJ;AAaH;;AApBmC;;AAuBxC,MAAMC,eAAe,GAAIZ,KAAD,IAAW;AAC/B,SAAO;AACHa,IAAAA,OAAO,EAAEb,KAAK,CAACa;AADZ,GAAP;AAGH,CAJD;;AAMA,eAAelB,OAAO,CAACiB,eAAD,EAAkB;AAAEhB,EAAAA;AAAF,CAAlB,CAAP,CAA2CE,SAA3C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions'\nimport styles from './styles.module.css'\n\nclass SearchBar extends React.Component {\n    state = {\n        searchTerm: '',\n        searchResults: null\n    }\n\n    render() {\n        return (\n            <form action={`/streams/search/${this.state.searchTerm}`} className={styles.search}>\n                <div className={styles.iconInput}>\n                    <input className={styles.prompt} \n                        type=\"text\" \n                        placeholder=\"Search streams...\" \n                        onChange={(e) => this.setState({searchTerm: e.target.value})}\n                    />\n                    <i className={searchIcon}></i>\n                </div>\n                <div className=\"results\"></div>\n            </form>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        streams: state.streams\n    }\n}\n\nexport default connect(mapStateToProps, { fetchStreams })(SearchBar);"]},"metadata":{},"sourceType":"module"}