{"ast":null,"code":"var _jsxFileName = \"/Users/annieliang/Documents/streams/client/src/components/GoogleAuth.js\";\nimport React from 'react';\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isSignedIn: null\n    };\n\n    this.onAuthChange = () => {\n      this.setState({\n        isSignedIn: this.auth.isSignedIn.get()\n      });\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '840949472308-4q0g97fohi1j4250o7mc2s2fmpsnspm1.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.setState({\n          isSignedIn: this.auth.isSignedIn.get()\n        });\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButtons() {\n    if (this.state.isSignedIn) {\n      return React.createElement(\"button\", {\n        className: \"ui red google\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      });\n    } else if (this.state.isSignedIn === null) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"idk\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Sign in\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.renderAuthButtons());\n  }\n\n}\n\nexport default GoogleAuth;","map":{"version":3,"sources":["/Users/annieliang/Documents/streams/client/src/components/GoogleAuth.js"],"names":["React","GoogleAuth","Component","state","isSignedIn","onAuthChange","setState","auth","get","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButtons","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACJC,MAAAA,UAAU,EAAE;AADR,KAD6B;;AAAA,SAiBrCC,YAjBqC,GAiBtB,MAAM;AACjB,WAAKC,QAAL,CAAc;AAACF,QAAAA,UAAU,EAAE,KAAKG,IAAL,CAAUH,UAAV,CAAqBI,GAArB;AAAb,OAAd;AACH,KAnBoC;AAAA;;AAIrCC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACnCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACpBC,QAAAA,QAAQ,EAAE,0EADU;AAEpBC,QAAAA,KAAK,EAAE;AAFa,OAAxB,EAGGC,IAHH,CAGQ,MAAM;AACV,aAAKV,IAAL,GAAYG,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,aAAKb,QAAL,CAAc;AAACF,UAAAA,UAAU,EAAE,KAAKG,IAAL,CAAUH,UAAV,CAAqBI,GAArB;AAAb,SAAd;AACA,aAAKD,IAAL,CAAUH,UAAV,CAAqBgB,MAArB,CAA4B,KAAKf,YAAjC;AACH,OAPD;AAQH,KATD;AAUH;;AAMDgB,EAAAA,iBAAiB,GAAG;AAChB,QAAG,KAAKlB,KAAL,CAAWC,UAAd,EAA0B;AACtB,aACI;AAAQ,QAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAKH,KAND,MAMO,IAAG,KAAKD,KAAL,CAAWC,UAAX,KAA0B,IAA7B,EAAmC;AACtC,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACH,KAFM,MAEA;AACH,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACH;AACJ;;AAEDkB,EAAAA,MAAM,GAAG;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKD,iBAAL,EAAN,CAAP;AACH;;AArCoC;;AAwCzC,eAAepB,UAAf","sourcesContent":["import React from 'react';\n\nclass GoogleAuth extends React.Component {\n    state = {\n        isSignedIn: null\n    }\n    componentDidMount() {\n        window.gapi.load('client:auth2', () => {\n            window.gapi.client.init({\n                clientId: '840949472308-4q0g97fohi1j4250o7mc2s2fmpsnspm1.apps.googleusercontent.com',\n                scope: 'email'\n            }).then(() => {\n                this.auth = window.gapi.auth2.getAuthInstance();\n                this.setState({isSignedIn: this.auth.isSignedIn.get()})\n                this.auth.isSignedIn.listen(this.onAuthChange);\n            })\n        })\n    }\n\n    onAuthChange = () => {\n        this.setState({isSignedIn: this.auth.isSignedIn.get()})\n    }\n\n    renderAuthButtons() {\n        if(this.state.isSignedIn) {\n            return (\n                <button className=\"ui red google\">\n\n                </button>\n            )\n        } else if(this.state.isSignedIn === null) {\n            return <div>idk</div>\n        } else {\n            return <div>Sign in</div>\n        }\n    }\n\n    render() {\n        return <div>{this.renderAuthButtons()}</div>\n    }\n}\n\nexport default GoogleAuth;"]},"metadata":{},"sourceType":"module"}