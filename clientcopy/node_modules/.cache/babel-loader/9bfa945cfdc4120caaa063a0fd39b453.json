{"ast":null,"code":"var _jsxFileName = \"/Users/annieliang/Documents/streams/client/src/components/streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return React.createElement(\"div\", {\n        className: \"adminButtons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/streams/edit/\".concat(stream.id),\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(Link, {\n        to: \"/streams/delete/\".concat(stream.id),\n        className: \"ui button negative\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Delete\"));\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return React.createElement(Link, {\n        to: \"/streams/\".concat(stream.id),\n        className: \"item\",\n        key: stream.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"streamPicFrame\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        className: \"ui tiny image middle aligned streamPic\",\n        src: \"data:image/jpeg;base64, \".concat(stream.image.url),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"infoStream\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"ui tiny avatar image middle aligned\",\n        src: this.props.userImageUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"streamData\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, stream.title), React.createElement(\"div\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.props.username))), this.renderAdmin(stream));\n    });\n  }\n\n  renderCreate() {\n    return React.createElement(Link, {\n      to: \"/streams/new\",\n      className: \"ui button primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Create Stream\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"streamTitleContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Streams\"), this.renderCreate()), React.createElement(\"div\", {\n      className: \"ui grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.renderList()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    userImageUrl: state.auth.imageUrl,\n    isSignedIn: state.auth.isSignedIn,\n    username: state.auth.username\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/annieliang/Documents/streams/client/src/components/streams/StreamList.js"],"names":["React","connect","Link","fetchStreams","StreamList","Component","componentDidMount","props","renderAdmin","stream","userId","currentUserId","id","renderList","streams","map","width","height","image","url","userImageUrl","title","username","renderCreate","render","mapStateToProps","state","Object","values","auth","imageUrl","isSignedIn"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from '../../actions'\n\nclass StreamList extends React.Component {\n    componentDidMount() {\n        this.props.fetchStreams();\n    }\n\n    renderAdmin(stream) {\n        if(stream.userId === this.props.currentUserId) {\n            return (\n                <div className=\"adminButtons\">\n                    <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">Edit</Link>\n                    <Link to={`/streams/delete/${stream.id}`} className=\"ui button negative\">Delete</Link>\n                </div>\n            )\n        }\n    }\n\n    renderList() {\n        return this.props.streams.map((stream) => {\n            return (\n                <Link to={`/streams/${stream.id}`} className=\"item\" key={stream.id}>\n                    <div className=\"streamPicFrame\">\n                        <img style={{width: \"100%\", height: \"100%\"}} className=\"ui tiny image middle aligned streamPic\" src={`data:image/jpeg;base64, ${stream.image.url}`}></img>\n                    </div>\n                    <div className=\"infoStream\">\n                        <img className=\"ui tiny avatar image middle aligned\" src={this.props.userImageUrl} />\n\n                        <div className=\"streamData\">\n                            <h5>{stream.title}</h5>\n                            <div className=\"description\">\n                                {this.props.username}\n                            </div>\n                        </div>\n                    </div>\n                    {this.renderAdmin(stream)}\n\n                    \n                </Link>\n            )\n        })\n    }\n\n    renderCreate() {\n        return (\n            <Link to=\"/streams/new\" className=\"ui button primary\">\n                Create Stream\n            </Link>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"streamTitleContainer\">\n                    <h2>Streams</h2>\n                    {this.renderCreate()}\n                </div>\n                <div className=\"ui grid\">{this.renderList()}</div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        streams: Object.values(state.streams),\n        currentUserId: state.auth.userId,\n        userImageUrl: state.auth.imageUrl,\n        isSignedIn: state.auth.isSignedIn,\n        username: state.auth.username\n    }\n}\n\nexport default connect(mapStateToProps, { fetchStreams })(StreamList); "]},"metadata":{},"sourceType":"module"}