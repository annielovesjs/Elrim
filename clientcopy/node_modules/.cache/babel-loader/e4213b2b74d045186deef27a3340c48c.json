{"ast":null,"code":"var _jsxFileName = \"/Users/annieliang/Documents/streams/client/src/components/streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from '../../actions';\nimport streamsStyles from './streamsStyles.module.css';\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return React.createElement(\"div\", {\n        className: streamsStyles.adminButtons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/streams/edit/\".concat(stream.id),\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(Link, {\n        to: \"/streams/delete/\".concat(stream.id),\n        className: \"ui button negative\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Delete\"));\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/streams/\".concat(stream.id),\n        className: \"item\",\n        key: stream.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: streamsStyles.streamPicFrame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        className: \"ui tiny image middle aligned streamPic\",\n        src: \"data:image/jpeg;base64, \".concat(stream.image.url),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: streamsStyles.infoStream,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"ui tiny avatar image middle aligned\",\n        src: stream.streamerPic,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: streamsStyles.streamData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: streamsStyles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, stream.title), React.createElement(\"div\", {\n        className: streamsStyles.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, stream.username))), this.renderAdmin(stream)));\n    });\n  }\n\n  renderCreate() {\n    return React.createElement(Link, {\n      to: \"/streams/new\",\n      className: \"ui button primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Create Stream\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"streamTitleContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Streams\"), this.props.isSignedIn ? this.renderCreate() : null), React.createElement(\"div\", {\n      className: \"ui grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.renderList()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    userImageUrl: state.auth.imageUrl,\n    isSignedIn: state.auth.isSignedIn,\n    username: state.auth.username\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/annieliang/Documents/streams/client/src/components/streams/StreamList.js"],"names":["React","connect","Link","fetchStreams","streamsStyles","StreamList","Component","componentDidMount","props","renderAdmin","stream","userId","currentUserId","adminButtons","id","renderList","streams","map","streamPicFrame","width","height","image","url","infoStream","streamerPic","streamData","title","description","username","renderCreate","render","isSignedIn","mapStateToProps","state","Object","values","auth","userImageUrl","imageUrl"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from '../../actions'\nimport streamsStyles from './streamsStyles.module.css'\n\nclass StreamList extends React.Component {\n    componentDidMount() {\n        this.props.fetchStreams();\n    }\n\n    renderAdmin(stream) {\n        if(stream.userId === this.props.currentUserId) {\n            return (\n                <div className={streamsStyles.adminButtons}>\n                    <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">Edit</Link>\n                    <Link to={`/streams/delete/${stream.id}`} className=\"ui button negative\">Delete</Link>\n                </div>\n            )\n        }\n    }\n\n    renderList() {\n        return this.props.streams.map((stream) => {\n            return (\n                <React.Fragment>\n                    <Link to={`/streams/${stream.id}`} className=\"item\" key={stream.id}>\n                        <div className={streamsStyles.streamPicFrame}>\n                            <img style={{width: \"100%\", height: \"100%\"}} className=\"ui tiny image middle aligned streamPic\" src={`data:image/jpeg;base64, ${stream.image.url}`}></img>\n                        </div>\n                        <div className={streamsStyles.infoStream}>\n                            <img className=\"ui tiny avatar image middle aligned\" src={stream.streamerPic} />\n\n                            <div className={streamsStyles.streamData}>\n                                <div className={streamsStyles.title}>{stream.title}</div>\n                                <div className={streamsStyles.description}>\n                                    {stream.username}\n                                </div>\n                            </div>\n                        </div>\n                        {this.renderAdmin(stream)}\n                    </Link>\n                </React.Fragment>\n            )\n        })\n    }\n\n    renderCreate() {\n        return (\n            <Link to=\"/streams/new\" className=\"ui button primary\">\n                Create Stream\n            </Link>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"streamTitleContainer\">\n                    <h2>Streams</h2>\n                    {this.props.isSignedIn ? this.renderCreate() : null}\n                </div>\n                <div className=\"ui grid\">{this.renderList()}</div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        streams: Object.values(state.streams),\n        currentUserId: state.auth.userId,\n        userImageUrl: state.auth.imageUrl,\n        isSignedIn: state.auth.isSignedIn,\n        username: state.auth.username\n    }\n}\n\nexport default connect(mapStateToProps, { fetchStreams })(StreamList); "]},"metadata":{},"sourceType":"module"}