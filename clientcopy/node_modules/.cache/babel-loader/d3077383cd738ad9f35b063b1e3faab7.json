{"ast":null,"code":"import _slicedToArray from \"/Users/annieliang/Documents/streams/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/annieliang/Documents/streams/client/src/components/SearchBar.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../actions';\n\nclass SearchBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchTerm: '',\n      searchResults: null\n    };\n\n    this.formSubmit = e => {\n      e.preventDefault();\n      const searchTerm = this.state.searchTerm;\n      console.log(searchTerm);\n      let results = [];\n\n      for (const _ref of Object.entries(this.props.streams)) {\n        var _ref2 = _slicedToArray(_ref, 2);\n\n        const key = _ref2[0];\n        const value = _ref2[1];\n        const title = value.title;\n\n        if (title.indexOf(searchTerm) !== -1) {\n          results.push(value);\n        } else if (value.username === searchTerm) {\n          results.push(value);\n        }\n\n        console.log(value.title);\n        console.log(value.title + ':' + value.title.indexOf(searchTerm));\n      } // this.props.streams.map((stream) => {\n      //     if(stream.title.includes(searchTerm)) {\n      //         searchResults.push(stream);\n      //     } else if(stream.username === searchTerm) {\n      //         searchResults.push(stream);\n      //     }\n      // })\n\n\n      this.setState({\n        searchResults: results\n      }, () => {\n        console.log(this.state);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.formSubmit,\n      class: \"ui fluid search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"ui icon input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      class: \"prompt\",\n      type: \"text\",\n      placeholder: \"Search streams...\",\n      onChange: e => this.setState({\n        searchTerm: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      class: \"search icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: state.streams\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(SearchBar);","map":{"version":3,"sources":["/Users/annieliang/Documents/streams/client/src/components/SearchBar.js"],"names":["React","connect","fetchStreams","SearchBar","Component","state","searchTerm","searchResults","formSubmit","e","preventDefault","console","log","results","Object","entries","props","streams","key","value","title","indexOf","push","username","setState","componentDidMount","render","target","mapStateToProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,YAA7B;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,aAAa,EAAE;AAFX,KAD4B;;AAAA,SASpCC,UAToC,GAStBC,CAAD,IAAO;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMJ,UAAU,GAAG,KAAKD,KAAL,CAAWC,UAA9B;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYN,UAAZ;AAEA,UAAIO,OAAO,GAAG,EAAd;;AAEA,yBAA0BC,MAAM,CAACC,OAAP,CAAe,KAAKC,KAAL,CAAWC,OAA1B,CAA1B,EAA8D;AAAA;;AAAA,cAAnDC,GAAmD;AAAA,cAA9CC,KAA8C;AAC1D,cAAMC,KAAK,GAAGD,KAAK,CAACC,KAApB;;AACA,YAAGA,KAAK,CAACC,OAAN,CAAcf,UAAd,MAA8B,CAAC,CAAlC,EAAqC;AACjCO,UAAAA,OAAO,CAACS,IAAR,CAAaH,KAAb;AACH,SAFD,MAEO,IAAGA,KAAK,CAACI,QAAN,KAAmBjB,UAAtB,EAAkC;AACrCO,UAAAA,OAAO,CAACS,IAAR,CAAaH,KAAb;AACH;;AACDR,QAAAA,OAAO,CAACC,GAAR,CAAYO,KAAK,CAACC,KAAlB;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAYO,KAAK,CAACC,KAAN,GAAc,GAAd,GAAoBD,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBf,UAApB,CAAhC;AACH,OAhBe,CAiBhB;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,WAAKkB,QAAL,CAAc;AAAEjB,QAAAA,aAAa,EAAEM;AAAjB,OAAd,EAA0C,MAAM;AAC5CF,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB;AACH,OAFD;AAGH,KApCmC;AAAA;;AAKpCoB,EAAAA,iBAAiB,GAAG;AAChB,SAAKT,KAAL,CAAWd,YAAX;AACH;;AA+BDwB,EAAAA,MAAM,GAAG;AACL,WACI;AAAO,MAAA,QAAQ,EAAE,KAAKlB,UAAtB;AAAkC,MAAA,KAAK,EAAC,iBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,KAAK,EAAC,QAAb;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,mBAFhB;AAGI,MAAA,QAAQ,EAAGC,CAAD,IAAO,KAAKe,QAAL,CAAc;AAAClB,QAAAA,UAAU,EAAEG,CAAC,CAACkB,MAAF,CAASR;AAAtB,OAAd,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI;AAAG,MAAA,KAAK,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ,EASI;AAAK,MAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CADJ;AAaH;;AApDmC;;AAuDxC,MAAMS,eAAe,GAAIvB,KAAD,IAAW;AAC/B,SAAO;AACHY,IAAAA,OAAO,EAAEZ,KAAK,CAACY;AADZ,GAAP;AAGH,CAJD;;AAMA,eAAehB,OAAO,CAAC2B,eAAD,EAAkB;AAAE1B,EAAAA;AAAF,CAAlB,CAAP,CAA2CC,SAA3C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../actions'\n\nclass SearchBar extends React.Component {\n    state = {\n        searchTerm: '',\n        searchResults: null\n    }\n    componentDidMount() {\n        this.props.fetchStreams();\n    }\n\n    formSubmit = (e) => {\n        e.preventDefault();\n        const searchTerm = this.state.searchTerm;\n        console.log(searchTerm);\n\n        let results = [];\n\n        for(const [key, value] of Object.entries(this.props.streams)) {\n            const title = value.title;\n            if(title.indexOf(searchTerm) !== -1) {\n                results.push(value);\n            } else if(value.username === searchTerm) {\n                results.push(value);\n            }\n            console.log(value.title);\n            console.log(value.title + ':' + value.title.indexOf(searchTerm));\n        }\n        // this.props.streams.map((stream) => {\n        //     if(stream.title.includes(searchTerm)) {\n        //         searchResults.push(stream);\n        //     } else if(stream.username === searchTerm) {\n        //         searchResults.push(stream);\n        //     }\n        // })\n        this.setState({ searchResults: results }, () => {\n            console.log(this.state);\n        })\n    }\n\n    render() {\n        return (\n            <form  onSubmit={this.formSubmit} class=\"ui fluid search\">\n                <div class=\"ui icon input\">\n                    <input class=\"prompt\" \n                        type=\"text\" \n                        placeholder=\"Search streams...\" \n                        onChange={(e) => this.setState({searchTerm: e.target.value})}\n                    />\n                    <i class=\"search icon\"></i>\n                </div>\n                <div class=\"results\"></div>\n            </form>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        streams: state.streams\n    }\n}\n\nexport default connect(mapStateToProps, { fetchStreams })(SearchBar);"]},"metadata":{},"sourceType":"module"}