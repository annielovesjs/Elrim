{"ast":null,"code":"var _jsxFileName = \"/Users/annieliang/Documents/streams/client/src/components/SearchBar.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { findStreams } from '../actions';\n\nclass SearchBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchTerm: ''\n    };\n\n    this.formSubmit = e => {\n      e.preventDefault();\n      const searchTerm = this.state.searchTerm;\n      let searchResults = [];\n      response.data.map(stream => {\n        if (stream.title.includes(searchTerm)) {\n          searchResults.push(stream);\n        } else if (stream.username === searchTerm) {\n          searchResults.push(stream);\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.formSubmit,\n      class: \"ui fluid search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"ui icon input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      class: \"prompt\",\n      type: \"text\",\n      placeholder: \"Search streams...\",\n      onChange: e => this.setState({\n        searchTerm: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      class: \"search icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: state.streams\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(SearchBar);","map":{"version":3,"sources":["/Users/annieliang/Documents/streams/client/src/components/SearchBar.js"],"names":["React","connect","findStreams","SearchBar","Component","state","searchTerm","formSubmit","e","preventDefault","searchResults","response","data","map","stream","title","includes","push","username","componentDidMount","props","fetchStreams","render","setState","target","value","mapStateToProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,YAA5B;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AACJC,MAAAA,UAAU,EAAE;AADR,KAD4B;;AAAA,SAQpCC,UARoC,GAQtBC,CAAD,IAAO;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMH,UAAU,GAAG,KAAKD,KAAL,CAAWC,UAA9B;AAEA,UAAII,aAAa,GAAG,EAApB;AACAC,MAAAA,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBC,MAAD,IAAY;AAC1B,YAAGA,MAAM,CAACC,KAAP,CAAaC,QAAb,CAAsBV,UAAtB,CAAH,EAAsC;AAClCI,UAAAA,aAAa,CAACO,IAAd,CAAmBH,MAAnB;AACH,SAFD,MAEO,IAAGA,MAAM,CAACI,QAAP,KAAoBZ,UAAvB,EAAmC;AACtCI,UAAAA,aAAa,CAACO,IAAd,CAAmBH,MAAnB;AACH;AACJ,OAND;AAOH,KApBmC;AAAA;;AAIpCK,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,YAAX;AACH;;AAgBDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAO,MAAA,QAAQ,EAAE,KAAKf,UAAtB;AAAkC,MAAA,KAAK,EAAC,iBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,KAAK,EAAC,QAAb;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,mBAFhB;AAGI,MAAA,QAAQ,EAAGC,CAAD,IAAO,KAAKe,QAAL,CAAc;AAACjB,QAAAA,UAAU,EAAEE,CAAC,CAACgB,MAAF,CAASC;AAAtB,OAAd,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI;AAAG,MAAA,KAAK,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ,EASI;AAAK,MAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CADJ;AAaH;;AApCmC;;AAuCxC,MAAMC,eAAe,GAAIrB,KAAD,IAAW;AAC/B,SAAO;AACHsB,IAAAA,OAAO,EAAEtB,KAAK,CAACsB;AADZ,GAAP;AAGH,CAJD;;AAMA,eAAe1B,OAAO,CAACyB,eAAD,EAAkB;AAAEL,EAAAA;AAAF,CAAlB,CAAP,CAA2ClB,SAA3C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { findStreams } from '../actions'\n\nclass SearchBar extends React.Component {\n    state = {\n        searchTerm: ''\n    }\n    componentDidMount() {\n        this.props.fetchStreams();\n    }\n\n    formSubmit = (e) => {\n        e.preventDefault();\n        const searchTerm = this.state.searchTerm;\n\n        let searchResults = [];\n        response.data.map((stream) => {\n            if(stream.title.includes(searchTerm)) {\n                searchResults.push(stream);\n            } else if(stream.username === searchTerm) {\n                searchResults.push(stream);\n            }\n        })\n    }\n\n    render() {\n        return (\n            <form  onSubmit={this.formSubmit} class=\"ui fluid search\">\n                <div class=\"ui icon input\">\n                    <input class=\"prompt\" \n                        type=\"text\" \n                        placeholder=\"Search streams...\" \n                        onChange={(e) => this.setState({searchTerm: e.target.value})}\n                    />\n                    <i class=\"search icon\"></i>\n                </div>\n                <div class=\"results\"></div>\n            </form>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        streams: state.streams\n    }\n}\n\nexport default connect(mapStateToProps, { fetchStreams })(SearchBar);"]},"metadata":{},"sourceType":"module"}