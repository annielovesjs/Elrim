{"ast":null,"code":"var _jsxFileName = \"/Users/annieliang/Documents/streams/client/src/components/streams/StreamCreate.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStream } from '../../actions';\nimport StreamForm from './streamForm';\n\nclass StreamCreate extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formProps => {\n      this.props.createStream(formProps);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Create a Stream\"), React.createElement(StreamForm, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {}; //hooked up ti render of the input title name\n\n  if (!formValues.title) {\n    errors.title = \"You need to enter a valid title\";\n  }\n\n  if (!formValues.description) {\n    errors.description = \"You need to enter a valid description\";\n  }\n\n  return errors;\n};\n\nexport default connect(null, {\n  createStream\n})(StreamCreate);","map":{"version":3,"sources":["/Users/annieliang/Documents/streams/client/src/components/streams/StreamCreate.js"],"names":["React","connect","createStream","StreamForm","StreamCreate","Component","onSubmit","formProps","props","render","validate","formValues","errors","title","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SACvCC,QADuC,GAC3BC,SAAD,IAAe;AACtB,WAAKC,KAAL,CAAWN,YAAX,CAAwBK,SAAxB;AACH,KAHsC;AAAA;;AAKvCE,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAE,KAAKH,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAZsC;;AAe3C,MAAMI,QAAQ,GAAIC,UAAD,IAAgB;AAC7B,QAAMC,MAAM,GAAG,EAAf,CAD6B,CACX;;AAClB,MAAG,CAACD,UAAU,CAACE,KAAf,EAAsB;AAClBD,IAAAA,MAAM,CAACC,KAAP,GAAe,iCAAf;AACH;;AAED,MAAG,CAACF,UAAU,CAACG,WAAf,EAA4B;AACxBF,IAAAA,MAAM,CAACE,WAAP,GAAqB,uCAArB;AACH;;AAED,SAAOF,MAAP;AACH,CAXD;;AAcA,eAAeX,OAAO,CAAC,IAAD,EAAO;AAACC,EAAAA;AAAD,CAAP,CAAP,CAA8BE,YAA9B,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\nimport { createStream } from '../../actions'\nimport StreamForm from './streamForm'\n\nclass StreamCreate extends React.Component {\n    onSubmit = (formProps) => {\n        this.props.createStream(formProps);\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>Create a Stream</h3>\n                <StreamForm onSubmit={this.onSubmit}/>\n            </div>\n        )\n    }\n}\n\nconst validate = (formValues) => {\n    const errors = {} //hooked up ti render of the input title name\n    if(!formValues.title) {\n        errors.title = \"You need to enter a valid title\"\n    }\n\n    if(!formValues.description) {\n        errors.description = \"You need to enter a valid description\"\n    }\n\n    return errors;\n}\n\n\nexport default connect(null, {createStream})(StreamCreate);"]},"metadata":{},"sourceType":"module"}