{"ast":null,"code":"var _jsxFileName = \"/Users/annieliang/Documents/streams/client/src/components/streams/StreamDelete.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { fetchStream, deleteStream } from '../../actions';\n\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderActions() {\n    const id = this.props.match.params.id;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.props.deleteStream(id),\n      className: \"ui button negative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(Link, {\n      to: \"/\",\n      className: \"ui button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Cancel\"));\n  }\n\n  renderContent() {\n    if (!this.props.stream) {\n      return \"Are you sure you want to delete this stream?\";\n    }\n\n    return \"Are you sure you want to delete the stream with title: \".concat(this.props.stream.title);\n  }\n\n  render() {\n    return React.createElement(Modal, {\n      title: \"Delete Stream\",\n      content: this.renderContent(),\n      actions: this.renderActions(),\n      onDismiss: () => history.push('/'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  deleteStream\n})(StreamDelete);","map":{"version":3,"sources":["/Users/annieliang/Documents/streams/client/src/components/streams/StreamDelete.js"],"names":["React","connect","Link","Modal","history","fetchStream","deleteStream","StreamDelete","Component","componentDidMount","props","match","params","id","renderActions","renderContent","stream","title","render","push","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,eAA1C;;AAGA,MAAMC,YAAN,SAA2BP,KAAK,CAACQ,SAAjC,CAA2C;AACvCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWL,WAAX,CAAuB,KAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAEDC,EAAAA,aAAa,GAAG;AAAA,UACJD,EADI,GACG,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,MADpB,CACJC,EADI;AAEZ,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKH,KAAL,CAAWJ,YAAX,CAAwBO,EAAxB,CAAvB;AAAoD,MAAA,SAAS,EAAC,oBAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,SAAS,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADJ;AAMH;;AAEDE,EAAAA,aAAa,GAAG;AACZ,QAAG,CAAC,KAAKL,KAAL,CAAWM,MAAf,EAAuB;AACnB,aAAO,8CAAP;AACH;;AACD,4EAAiE,KAAKN,KAAL,CAAWM,MAAX,CAAkBC,KAAnF;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACD,WACI,oBAAC,KAAD;AACI,MAAA,KAAK,EAAC,eADV;AAEI,MAAA,OAAO,EAAE,KAAKH,aAAL,EAFb;AAGI,MAAA,OAAO,EAAE,KAAKD,aAAL,EAHb;AAII,MAAA,SAAS,EAAE,MAAMV,OAAO,CAACe,IAAR,CAAa,GAAb,CAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAQP;;AA/BsC;;AAkC3C,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AACHN,IAAAA,MAAM,EAAEK,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACX,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AADL,GAAP;AAGH,CAJD;;AAMA,eAAeZ,OAAO,CAACmB,eAAD,EAAkB;AAAEf,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CAAwDC,YAAxD,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport Modal from '../Modal'\nimport history from '../../history'\nimport { fetchStream, deleteStream } from '../../actions'\n\n\nclass StreamDelete extends React.Component {\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n    \n    renderActions() {\n        const { id } = this.props.match.params;\n        return (      \n            <React.Fragment>\n                <button onClick={() => this.props.deleteStream(id)} className=\"ui button negative\">Delete</button>\n                <Link to=\"/\" className=\"ui button\">Cancel</Link>\n            </React.Fragment>\n        )\n    }\n\n    renderContent() {\n        if(!this.props.stream) {\n            return \"Are you sure you want to delete this stream?\"\n        }\n        return `Are you sure you want to delete the stream with title: ${this.props.stream.title}`\n    }\n\n    render() {\n            return (\n                <Modal \n                    title=\"Delete Stream\"\n                    content={this.renderContent()}\n                    actions={this.renderActions()}\n                    onDismiss={() => history.push('/')}\n                />\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        stream: state.streams[ownProps.match.params.id]\n    }\n}\n\nexport default connect(mapStateToProps, { fetchStream, deleteStream })(StreamDelete);"]},"metadata":{},"sourceType":"module"}