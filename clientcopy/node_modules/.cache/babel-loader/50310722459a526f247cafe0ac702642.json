{"ast":null,"code":"import _defineProperty from \"/Users/annieliang/Documents/streams/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport streams from '../apis/streams';\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from '../types';\nimport history from '../history';\nexport const signIn = (userId, imageUrl) => {\n  return {\n    type: SIGN_IN,\n    payload: {\n      userId,\n      imageUrl\n    }\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => async (dispatch, getState) => {\n  const userId = getState().auth.userId;\n  const response = await streams.post('/streams', _objectSpread({}, formValues, {\n    userId\n  }));\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n  history.push('/');\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/streams');\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(\"/streams/\".concat(id));\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.patch(\"/streams/\".concat(id), formValues); //updates some properties to the form state\n\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n  history.push('/');\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(\"/streams/\".concat(id));\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n  history.push('/');\n};","map":{"version":3,"sources":["/Users/annieliang/Documents/streams/client/src/actions/index.js"],"names":["streams","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","history","signIn","userId","imageUrl","type","payload","signOut","createStream","formValues","dispatch","getState","auth","response","post","data","push","fetchStreams","get","fetchStream","id","editStream","patch","deleteStream","delete"],"mappings":";;;;;;AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,aAA5B,EAA2CC,aAA3C,EAA0DC,YAA1D,EAAwEC,aAAxE,EAAuFC,WAAvF,QAA0G,UAA1G;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,OAAO,MAAMC,MAAM,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;AACxC,SAAO;AACHC,IAAAA,IAAI,EAAEX,OADH;AAEHY,IAAAA,OAAO,EAAE;AAAEH,MAAAA,MAAF;AAAUC,MAAAA;AAAV;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAO;AACHF,IAAAA,IAAI,EAAEV;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMa,YAAY,GAAIC,UAAD,IAAgB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAAA,QAC9DR,MAD8D,GACnDQ,QAAQ,GAAGC,IADwC,CAC9DT,MAD8D;AAEtE,QAAMU,QAAQ,GAAG,MAAMpB,OAAO,CAACqB,IAAR,CAAa,UAAb,oBAA8BL,UAA9B;AAA0CN,IAAAA;AAA1C,KAAvB;AACAO,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAET,aAAR;AAAuBU,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACAd,EAAAA,OAAO,CAACe,IAAR,CAAa,GAAb;AACH,CALM;AAOP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOP,QAAP,IAAoB;AAClD,QAAMG,QAAQ,GAAG,MAAMpB,OAAO,CAACyB,GAAR,CAAY,UAAZ,CAAvB;AACAR,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAER,aAAR;AAAuBS,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMI,WAAW,GAAIC,EAAD,IAAQ,MAAOV,QAAP,IAAoB;AACnD,QAAMG,QAAQ,GAAG,MAAMpB,OAAO,CAACyB,GAAR,oBAAwBE,EAAxB,EAAvB;AACAV,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEP,YAAR;AAAsBQ,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMM,UAAU,GAAG,CAACD,EAAD,EAAKX,UAAL,KAAoB,MAAOC,QAAP,IAAoB;AAC9D,QAAMG,QAAQ,GAAG,MAAMpB,OAAO,CAAC6B,KAAR,oBAA0BF,EAA1B,GAAgCX,UAAhC,CAAvB,CAD8D,CACM;;AACpEC,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEL,WAAR;AAAqBM,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAvC,GAAD,CAAR;AACAd,EAAAA,OAAO,CAACe,IAAR,CAAa,GAAb;AACH,CAJM;AAMP,OAAO,MAAMO,YAAY,GAAIH,EAAD,IAAQ,MAAOV,QAAP,IAAoB;AACpD,QAAMjB,OAAO,CAAC+B,MAAR,oBAA2BJ,EAA3B,EAAN;AACAV,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEN,aAAR;AAAuBO,IAAAA,OAAO,EAAEc;AAAhC,GAAD,CAAR;AACAnB,EAAAA,OAAO,CAACe,IAAR,CAAa,GAAb;AACH,CAJM","sourcesContent":["import streams from '../apis/streams'\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from '../types'\nimport history from '../history'\n\nexport const signIn = (userId, imageUrl) => {\n    return {\n        type: SIGN_IN,\n        payload: { userId, imageUrl }\n    }\n}\n\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT\n    }\n}\n\nexport const createStream = (formValues) => async (dispatch, getState) => {\n    const { userId } = getState().auth;\n    const response = await streams.post('/streams', { ...formValues, userId });\n    dispatch({ type: CREATE_STREAM, payload: response.data });\n    history.push('/');\n}\n\nexport const fetchStreams = () => async (dispatch) => {\n    const response = await streams.get('/streams');\n    dispatch({ type: FETCH_STREAMS, payload: response.data });\n}\n\nexport const fetchStream = (id) => async (dispatch) => {\n    const response = await streams.get(`/streams/${id}`);\n    dispatch({ type: FETCH_STREAM, payload: response.data });\n}\n\nexport const editStream = (id, formValues) => async (dispatch) => {\n    const response = await streams.patch(`/streams/${id}`, formValues); //updates some properties to the form state\n    dispatch({ type: EDIT_STREAM, payload: response.data });\n    history.push('/');\n}\n\nexport const deleteStream = (id) => async (dispatch) => {\n    await streams.delete(`/streams/${id}`);\n    dispatch({ type: DELETE_STREAM, payload: id});\n    history.push('/');\n}"]},"metadata":{},"sourceType":"module"}