{"ast":null,"code":"var _jsxFileName = \"/Users/annieliang/Documents/streams/client/src/components/streams/StreamFind.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\n\nclass StreamFind extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchTerm: '',\n      searchResults: null\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStreams();\n    const id = this.props.id;\n    console.log(id);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"find\");\n  }\n\n}\n\nexport default connect(null, {\n  fetchStreams\n})(StreamFind);","map":{"version":3,"sources":["/Users/annieliang/Documents/streams/client/src/components/streams/StreamFind.js"],"names":["React","connect","fetchStreams","StreamFind","Component","constructor","props","state","searchTerm","searchResults","componentDidMount","id","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAGnBC,KAHmB,GAGX;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,aAAa,EAAE;AAFX,KAHW;AAElB;;AAMDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKJ,KAAL,CAAWJ,YAAX;AADgB,UAERS,EAFQ,GAED,KAAKL,KAFJ,CAERK,EAFQ;AAGhBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AAEH;;AAEDG,EAAAA,MAAM,GAAG;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAlBoC;;AAqBzC,eAAeb,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA;AAAF,CAAP,CAAP,CAAgCC,UAAhC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions'\n\nclass StreamFind extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    state = {\n        searchTerm: '',\n        searchResults: null\n    }\n\n    componentDidMount() {\n        this.props.fetchStreams();\n        const { id } = this.props;\n        console.log(id);\n\n    }\n\n    render() {\n        return <div>find</div>\n    }\n}\n\nexport default connect(null, { fetchStreams })(StreamFind);"]},"metadata":{},"sourceType":"module"}